-- -- 테이블 생성
CREATE TABLE IF NOT EXISTS question
(
    id       BIGINT AUTO_INCREMENT PRIMARY KEY,
    job      VARCHAR(255) NOT NULL,
    question TEXT         NOT NULL,
    priority INT NOT NULL,
    difficulty INT NOT NULL,
    answer VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS feedback
(
    id       BIGINT AUTO_INCREMENT PRIMARY KEY,
    question_id BIGINT NOT NULL ,
    score INT NOT NULL ,
    feedback TEXT         NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    picture VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO users (email, name, picture) VALUES
                                             ('user1@example.com', 'User One', 'https://api.dicebear.com/7.x/miniavs/svg?seed=3'),
                                             ('user2@example.com', 'User Two', 'https://api.dicebear.com/7.x/miniavs/svg?seed=8'),
                                             ('user3@example.com', 'User Three', 'https://api.dicebear.com/7.x/miniavs/svg?seed=12');

CREATE TABLE IF NOT EXISTS posts (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    category VARCHAR(255),
    user_id BIGINT NOT NULL,
    views BIGINT,
    CONSTRAINT fk_posts_users FOREIGN KEY (user_id) REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE likes (
   id BIGINT AUTO_INCREMENT PRIMARY KEY,
   post_id BIGINT NOT NULL,
   user_id BIGINT NOT NULL,
   liked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   UNIQUE(post_id, user_id)  -- 한 유저는 한 게시물에 대해 한 번만 좋아요를 누를 수 있음
);

CREATE TABLE IF NOT EXISTS comments (
     id BIGINT AUTO_INCREMENT PRIMARY KEY,
    description VARCHAR(255) NOT NULL,
    post_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_comments_posts FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_comments_users FOREIGN KEY (post_id) REFERENCES posts(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

INSERT INTO posts (title, description, category, user_id)
VALUES
    -- 자유 게시판 게시물
    ('요즘 듣기 좋은 음악 추천해요', '요즘 들으면 기분 좋아지는 음악 추천드립니다. 모두 즐거운 하루 보내세요!', '자유 게시판', 1),
    ('주말에 가볼 만한 곳 추천해주세요', '이번 주말에 짧게 여행을 갈만한 곳을 찾고 있어요. 가보신 곳 중 추천해주실 곳 있나요?', '자유 게시판', 2),
    ('책 추천해 주세요!', '요즘 독서하는 재미에 빠졌습니다. 읽고 좋았던 책 추천해주시면 감사하겠습니다.', '자유 게시판', 3),
    ('게임 좋아하는 분들 모여요!', '최근에 시작한 게임이 너무 재밌어요. 같이 하실 분 있으면 댓글 남겨주세요!', '자유 게시판', 1),
    ('영화 추천 부탁드려요', '가장 감명 깊게 본 영화가 있나요? 주말에 볼 영화 추천 부탁드립니다.', '자유 게시판', 2),
    ('오늘 아침에 일어난 일 공유해요', '오늘 출근길에 있었던 재미있는 일을 공유합니다. 여러분도 하루를 어떻게 시작하셨나요?', '자유 게시판', 2),
    ('다이어트 꿀팁 공유해요', '다이어트 중인데 효과를 본 방법들이 있으면 공유해 주세요. 건강하게 관리합시다!', '자유 게시판', 3),
    ('최신 IT 뉴스 공유', '요즘 기술 트렌드가 어떻게 변화하는지 궁금하시죠? 최근 IT 뉴스 요약 공유합니다.', '자유 게시판', 3),

    -- 피어 리뷰 (면접 피드백 게시물)
    ('프론트엔드 면접 후기 및 질문 공유', '최근 프론트엔드 면접을 봤는데 예상치 못한 질문들이 많았습니다. 같이 공유해요.', '피어 리뷰', 3),
    ('백엔드 면접 질문 피드백 부탁드립니다', '백엔드 면접에서 질문 받은 내용을 정리해봤습니다. 피드백 주시면 감사하겠습니다.', '피어 리뷰', 2),
    ('면접에서 자주 나오는 기술 질문', '여러 회사를 지원하며 공통적으로 받았던 질문들을 정리해봤습니다. 도움이 되길 바랍니다.', '피어 리뷰', 3),
    ('비전공자 면접 준비 후기', '저는 비전공자로서 IT 기업 면접 준비를 했는데, 그 과정에서 배운 점을 공유하고 싶습니다.', '피어 리뷰', 1),
    ('대기업 면접 후기', '최근 대기업 면접을 보고 왔습니다. 경험한 질문들과 분위기를 리뷰해 봅니다.', '피어 리뷰', 1),
    ('코딩 테스트 후기와 팁', '면접 전에 코딩 테스트를 진행했는데, 난이도가 생각보다 높았습니다. 문제와 해결 방법을 공유합니다.', '피어 리뷰', 2),
    ('스타트업 면접 질문과 피드백', '스타트업 면접에서 받았던 질문들과 피드백을 정리해봤습니다. 함께 참고하시길 바랍니다.', '피어 리뷰', 3),
    ('면접에서 가장 어려웠던 질문', '면접 중 가장 예상치 못한 질문이 무엇이었는지 공유하고, 그에 대한 답변 전략을 논의하고 싶습니다.', '피어 리뷰', 1),

    -- 스터디 게시물
    ('자바스크립트 심화 스터디 모집', 'ES6부터 최신 자바스크립트 기술을 심도 있게 다루는 스터디에 참여하실 분을 모집합니다.', '스터디', 1),
    ('알고리즘 스터디 같이 하실 분 구합니다', '매주 알고리즘 문제를 풀고 함께 토론하는 스터디를 모집합니다. 성실한 분을 기다립니다.', '스터디', 2),
    ('CS 기본기 스터디 모집', '컴퓨터 공학 기초 지식을 다지는 스터디를 시작하려고 합니다. 함께 공부하실 분들 구합니다.', '스터디', 1),
    ('React 프로젝트 스터디 모집', 'React를 활용한 프로젝트 개발 스터디를 진행합니다. 프론트엔드 개발에 관심 있는 분들 환영합니다.', '스터디', 3),
    ('프로그래밍 면접 대비 스터디 모집', '프로그래밍 면접 준비를 함께 할 사람들을 모집합니다. 알고리즘부터 시스템 설계까지 다룹니다.', '스터디', 2),
    ('주말 코딩 스터디 구합니다', '주말마다 함께 모여서 각자 프로젝트를 진행하며 피드백을 주고받는 스터디입니다.', '스터디', 1),
    ('백엔드 개발 스터디원 구합니다', 'Java, Spring을 중심으로 백엔드 개발을 공부하는 스터디입니다. 꾸준히 참여할 분 구합니다.', '스터디', 3),
    ('데이터베이스 스터디 모집', '데이터베이스 이론과 실습을 병행하는 스터디를 진행하려고 합니다. 함께 성장할 분들을 기다립니다.', '스터디', 2);


-- 백엔드 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty, answer)
VALUES
    ('백엔드 기술면접', 'REST와 SOAP의 차이점은 무엇인가요?', 1, 2, '# REST와 SOAP의 차이점\n\nREST는 HTTP 프로토콜을 기반으로 한 경량 아키텍처로, JSON 형식으로 데이터를 주고받습니다. 반면, SOAP는 XML을 사용하는 더 무거운 프로토콜로, 보안성과 트랜잭션 관리가 필요할 때 주로 사용됩니다. REST는 확장성과 유연성 면에서 우수하며, SOAP는 엔터프라이즈 시스템에서 많이 사용됩니다.'),
    ('백엔드 기술면접', '의존성 주입(Dependency Injection)의 개념과 이점은 무엇인가요?', 2, 1, '# 의존성 주입(Dependency Injection)의 개념과 이점\n\n의존성 주입은 객체 간의 의존 관계를 외부에서 설정해주는 디자인 패턴입니다. 이를 통해 코드의 결합도를 낮추고, 테스트와 유지보수성을 높일 수 있습니다. 의존성 주입을 사용하면 코드의 유연성이 증가하고, 테스트 시 모킹을 사용해 독립적인 검증이 가능합니다.'),
    ('백엔드 기술면접', '트랜잭션이란 무엇이며, 트랜잭션의 ACID 속성을 설명해주세요.', 3, 2, '# 트랜잭션과 ACID 속성\n\n트랜잭션은 데이터베이스의 상태를 변경하는 작업의 단위입니다. ACID 속성은 트랜잭션의 일관성과 안정성을 보장하기 위한 네 가지 속성으로, **Atomicity(원자성)**, **Consistency(일관성)**, **Isolation(고립성)**, **Durability(지속성)**을 의미합니다. 이 속성들은 데이터베이스의 신뢰성을 높이기 위해 필수적입니다.'),
    ('백엔드 기술면접', 'SQL과 NoSQL 데이터베이스의 차이점은 무엇인가요?', 4, 3, '# SQL과 NoSQL의 차이점\n\nSQL 데이터베이스는 관계형 데이터베이스로, 스키마가 고정되어 있으며 트랜잭션을 지원합니다. 반면, NoSQL은 비관계형 데이터베이스로, 스키마가 유연하고 확장성이 뛰어나 대규모 데이터를 처리하는 데 적합합니다. SQL은 데이터 무결성이 중요한 환경에 적합하고, NoSQL은 높은 확장성을 필요로 하는 환경에서 사용됩니다.'),
    ('백엔드 기술면접', '자바에서 가비지 컬렉션(Garbage Collection)이 어떻게 작동하나요?', 5, 3, '# 자바의 가비지 컬렉션\n\n자바의 가비지 컬렉션은 더 이상 참조되지 않는 객체를 자동으로 메모리에서 해제하는 프로세스입니다. 주로 Mark-and-Sweep 알고리즘이 사용되며, 힙 영역의 메모리 관리 효율을 높입니다. 이를 통해 개발자는 메모리 관리를 수동으로 처리하지 않아도 되며, 시스템의 안정성을 보장받을 수 있습니다.'),
    ('백엔드 기술면접', 'OAuth와 JWT의 차이점은 무엇인가요?', 3, 4, '# OAuth와 JWT의 차이점\n\nOAuth는 외부 애플리케이션이 사용자 데이터를 접근할 수 있도록 인증하는 프로토콜이며, JWT는 인증 정보를 JSON 형식의 토큰으로 관리하여 인증을 처리합니다. JWT는 자가 포함형 토큰으로, 서버와의 추가적인 통신 없이 클라이언트에서 검증할 수 있습니다. OAuth는 주로 인증된 권한을 위임하는 데 사용되며, JWT는 상태를 유지하지 않는 인증에 주로 사용됩니다.'),
    ('백엔드 기술면접', '서버 부하 분산(Load Balancing)은 어떻게 구현되나요?', 2, 4, '# 서버 부하 분산(Load Balancing)\n\n로드 밸런싱은 여러 서버에 트래픽을 분산하여 서버의 과부하를 방지하고 성능을 최적화하는 방법입니다. 일반적으로 Round Robin, Least Connections, IP Hash와 같은 알고리즘을 사용하여 트래픽을 분배합니다. 이를 통해 고가용성과 성능을 유지할 수 있으며, 실제 서버 부하 분산 시스템을 구축한 경험을 설명하는 것이 좋습니다.'),
    ('백엔드 기술면접', 'CI/CD 파이프라인이란 무엇이며, 이를 통해 어떻게 소프트웨어 개발 속도를 높일 수 있나요?', 1, 3, '# CI/CD 파이프라인\n\nCI/CD는 Continuous Integration(지속적인 통합)과 Continuous Deployment(지속적인 배포)를 의미하며, 자동화된 빌드, 테스트, 배포 프로세스를 통해 개발 주기를 단축할 수 있습니다. CI는 새로운 코드를 주기적으로 통합하고, CD는 이를 자동으로 배포하는 과정을 관리합니다. Jenkins, GitLab CI/CD 등의 도구를 사용해 실제로 파이프라인을 구성한 경험을 설명할 수 있습니다.'),
    ('백엔드 기술면접', 'Spring Security를 사용하여 인증과 인가를 처리하는 방법은 무엇인가요?', 3, 5, '# Spring Security의 인증과 인가 처리\n\nSpring Security는 자바 애플리케이션에서 인증과 인가를 처리하는 데 사용됩니다. 주로 JWT, OAuth2 등의 토큰을 이용하여 인증을 수행하며, 권한 기반의 인가를 지원합니다. 면접에서는 Spring Security를 사용하여 API 접근을 제어한 경험과 보안 강화 방법에 대해 설명할 수 있습니다.'),
    ('백엔드 기술면접', '마이크로서비스 아키텍처와 모놀리틱 아키텍처의 차이점은 무엇인가요?', 2, 3, '# 마이크로서비스와 모놀리틱 아키텍처\n\n모놀리틱 아키텍처는 애플리케이션이 하나의 큰 단일 애플리케이션으로 구성되는 반면, 마이크로서비스 아키텍처는 각 서비스가 독립적으로 배포되고 관리됩니다. 마이크로서비스는 확장성과 유지보수성이 뛰어나지만, 복잡한 관리가 필요합니다. 반면, 모놀리틱은 배포와 관리가 단순하지만 확장성에 제약이 있습니다. 경험을 공유할 때는 마이크로서비스 도입 시 이점과 도전 과제를 설명하면 좋습니다.');


-- 프론트엔드 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('프론트엔드 기술면접', 'React와 Vue.js의 차이점은 무엇인가요?', 1, 3),
    ('프론트엔드 기술면접', '웹 접근성이란 무엇인가요?', 2, 2),
    ('프론트엔드 기술면접', 'CSS Flexbox와 Grid의 차이점은 무엇인가요?', 3, 4),
    ('프론트엔드 기술면접', 'SSR과 CSR의 차이점은 무엇인가요?', 4, 4),
    ('프론트엔드 기술면접', 'CORS란 무엇이며 어떻게 해결할 수 있나요?', 5, 5),
    ('프론트엔드 기술면접', '프론트엔드에서 성능 최적화를 위한 방법은 무엇인가요?', 2, 3),
    ('프론트엔드 기술면접', 'JavaScript 비동기 처리 방식에는 어떤 것들이 있나요?', 3, 4),
    ('프론트엔드 기술면접', '프론트엔드 테스트 도구에는 어떤 것들이 있나요?', 1, 2),
    ('프론트엔드 기술면접', 'React의 상태 관리를 위해 어떤 도구를 사용할 수 있나요?', 2, 3),
    ('프론트엔드 기술면접', '프론트엔드에서 버전 관리는 어떻게 하나요?', 4, 4);

-- AI 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('AI 기술면접', '머신러닝과 딥러닝의 차이점은 무엇인가요?', 1, 4),
    ('AI 기술면접', '과적합(Overfitting)이란 무엇이며 이를 방지하는 방법은?', 2, 3),
    ('AI 기술면접', '지도학습과 비지도학습의 차이점은 무엇인가요?', 3, 4),
    ('AI 기술면접', '신경망에서 활성화 함수(Activation Function)의 역할은 무엇인가요?', 2, 5),
    ('AI 기술면접', '강화학습(Reinforcement Learning)의 개념과 사례는 무엇인가요?', 4, 4),
    ('AI 기술면접', 'CNN과 RNN의 차이점은 무엇인가요?', 5, 5),
    ('AI 기술면접', '머신러닝 모델의 성능 평가 지표에는 어떤 것들이 있나요?', 3, 3),
    ('AI 기술면접', '하이퍼파라미터 튜닝이란 무엇인가요?', 1, 2),
    ('AI 기술면접', '머신러닝에서 데이터 전처리의 중요성은 무엇인가요?', 2, 3),
    ('AI 기술면접', '딥러닝에서 배치 정규화(Batch Normalization)는 무엇인가요?', 4, 4);


-- 안드로이드 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('안드로이드 기술면접', '안드로이드와 iOS의 차이점은 무엇인가요?', 1, 2),
    ('안드로이드 기술면접', 'Activity와 Fragment의 차이점은 무엇인가요?', 2, 3),
    ('안드로이드 기술면접', '안드로이드에서 데이터 저장 방법에는 어떤 것들이 있나요?', 3, 4),
    ('안드로이드 기술면접', '안드로이드에서 Retrofit을 사용하는 이유는 무엇인가요?', 4, 4),
    ('안드로이드 기술면접', '안드로이드의 생명주기(Lifecycle)에 대해 설명해주세요.', 2, 3),
    ('안드로이드 기술면접', '안드로이드에서 MVVM 패턴이란 무엇인가요?', 3, 5),
    ('안드로이드 기술면접', '안드로이드 앱 성능 최적화 방법은 무엇인가요?', 5, 4),
    ('안드로이드 기술면접', '안드로이드의 데이터바인딩(Data Binding)은 무엇인가요?', 4, 2),
    ('안드로이드 기술면접', '안드로이드에서 비동기 처리를 위한 방법은 무엇인가요?', 3, 3),
    ('안드로이드 기술면접', '안드로이드에서 Gradle이란 무엇인가요?', 2, 3);


-- IOS 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('IOS 기술면접', 'Swift와 Objective-C의 차이점은 무엇인가요?', 1, 2),
    ('IOS 기술면접', 'iOS에서 메모리 관리 방법은 어떻게 이루어지나요?', 2, 3),
    ('IOS 기술면접', '앱의 생명주기(App Lifecycle)에 대해 설명해주세요.', 3, 4),
    ('IOS 기술면접', 'iOS에서 MVC, MVVM 패턴의 차이점은 무엇인가요?', 4, 5),
    ('IOS 기술면접', 'Core Data와 Realm의 차이점은 무엇인가요?', 5, 4),
    ('IOS 기술면접', 'iOS에서 ARC(Automatic Reference Counting)는 어떻게 동작하나요?', 2, 3),
    ('IOS 기술면접', 'iOS 앱에서 백그라운드 작업을 처리하는 방법은 무엇인가요?', 3, 4),
    ('IOS 기술면접', 'iOS 앱에서 네트워킹을 처리하는 방법은 무엇인가요?', 4, 3),
    ('IOS 기술면접', 'iOS 앱 성능 최적화를 위해 어떤 방법을 사용하나요?', 5, 4),
    ('IOS 기술면접', 'Swift의 Optional 타입에 대해 설명해주세요.', 3, 2);


-- PM 면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('IOS 기술면접', 'Swift와 Objective-C의 차이점은 무엇인가요?', 1, 2),
    ('IOS 기술면접', 'iOS에서 메모리 관리 방법은 어떻게 이루어지나요?', 2, 3),
    ('IOS 기술면접', '앱의 생명주기(App Lifecycle)에 대해 설명해주세요.', 3, 4),
    ('IOS 기술면접', 'iOS에서 MVC, MVVM 패턴의 차이점은 무엇인가요?', 4, 5),
    ('IOS 기술면접', 'Core Data와 Realm의 차이점은 무엇인가요?', 5, 4),
    ('IOS 기술면접', 'iOS에서 ARC(Automatic Reference Counting)는 어떻게 동작하나요?', 2, 3),
    ('IOS 기술면접', 'iOS 앱에서 백그라운드 작업을 처리하는 방법은 무엇인가요?', 3, 4),
    ('IOS 기술면접', 'iOS 앱에서 네트워킹을 처리하는 방법은 무엇인가요?', 4, 3),
    ('IOS 기술면접', 'iOS 앱 성능 최적화를 위해 어떤 방법을 사용하나요?', 5, 4),
    ('IOS 기술면접', 'Swift의 Optional 타입에 대해 설명해주세요.', 3, 2);


-- 게임 기술면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('게임 기술면접', '게임 엔진에서 렌더링 파이프라인은 어떻게 작동하나요?', 1, 5),
    ('게임 기술면접', '물리 엔진(Physics Engine)이란 무엇이며, 어떻게 작동하나요?', 2, 4),
    ('게임 기술면접', '게임 개발에서 최적화는 왜 중요한가요?', 3, 3),
    ('게임 기술면접', 'AI를 게임 캐릭터에 적용할 때 고려해야 할 사항은 무엇인가요?', 4, 5),
    ('게임 기술면접', '게임에서 멀티스레딩의 중요성은 무엇인가요?', 5, 4),
    ('게임 기술면접', '네트워크 동기화(Network Synchronization)란 무엇인가요?', 2, 3),
    ('게임 기술면접', '게임 개발에서 애자일 방법론을 어떻게 적용하나요?', 3, 4),
    ('게임 기술면접', '게임 로직과 렌더링 로직을 분리해야 하는 이유는 무엇인가요?', 4, 5),
    ('게임 기술면접', '게임 성능 최적화를 위해 어떤 도구를 사용하나요?', 5, 4),
    ('게임 기술면접', '게임 개발 시 디자인 패턴을 어떻게 활용하나요?', 2, 3);


-- 마케터 면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
('마케터 면접', 'A/B 테스트란 무엇이며, 마케팅에 어떻게 활용하나요?', 1, 3),
('마케터 면접', '마케팅 전략을 세울 때 가장 중요한 요소는 무엇인가요?', 2, 4),
('마케터 면접', '브랜드 포지셔닝이란 무엇이며, 어떻게 설정하나요?', 3, 4),
('마케터 면접', '고객 세분화(Customer Segmentation)는 왜 중요한가요?', 4, 5),
('마케터 면접', '디지털 마케팅에서 SEO와 SEM의 차이점은 무엇인가요?', 5, 4),
('마케터 면접', '마케팅 퍼널(Marketing Funnel)이란 무엇인가요?', 2, 3),
('마케터 면접', '콘텐츠 마케팅(Content Marketing)의 중요성에 대해 설명해주세요.', 3, 4),
('마케터 면접', '리드 생성(Lead Generation)이란 무엇인가요?', 4, 3),
('마케터 면접', '마케팅 캠페인의 성공을 어떻게 측정하나요?', 5, 4),
('마케터 면접', 'SNS 마케팅 전략을 어떻게 세우나요?', 2, 3);

-- 디자이너 면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('디자이너 면접', 'UI와 UX의 차이점은 무엇인가요?', 1, 3),
    ('디자이너 면접', '사용자 중심 디자인(User-Centered Design)이란 무엇인가요?', 2, 4),
    ('디자이너 면접', '반응형 웹 디자인이란 무엇이며, 왜 중요한가요?', 3, 4),
    ('디자이너 면접', '디자인에서 색상 이론(Color Theory)의 역할은 무엇인가요?', 4, 3),
    ('디자이너 면접', '디자인 작업에서 프로토타이핑의 중요성은 무엇인가요?', 5, 5),
    ('디자이너 면접', '사용성 테스트(Usability Testing)는 어떻게 진행하나요?', 3, 4),
    ('디자이너 면접', '디자인 트렌드를 어떻게 분석하나요?', 2, 3),
    ('디자이너 면접', '프로젝트에서 디자인 협업을 어떻게 진행하나요?', 4, 4),
    ('디자이너 면접', '디자인 시스템이란 무엇인가요?', 5, 3),
    ('디자이너 면접', 'UI 디자인에서 마이크로인터랙션(Micro-interactions)의 중요성은 무엇인가요?', 3, 5);

INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('PM 기술면접', '프로젝트 관리에서 애자일 방법론의 장점은 무엇인가요?', 1, 2),
    ('PM 기술면접', '프로젝트 일정이 지연될 때 어떻게 대처하나요?', 2, 3),
    ('PM 기술면접', '이해관계자들과의 커뮤니케이션을 어떻게 관리하나요?', 3, 4),
    ('PM 기술면접', '리스크 관리는 어떻게 이루어지나요?', 4, 4),
    ('PM 기술면접', '스코프 크립(Scope Creep)이 발생했을 때 대처 방법은 무엇인가요?', 5, 5),
    ('PM 기술면접', '프로젝트에서 예산 관리는 어떻게 하나요?', 2, 3),
    ('PM 기술면접', '팀의 생산성을 높이기 위한 방법은 무엇인가요?', 3, 2),
    ('PM 기술면접', '프로젝트 목표 설정 시 중요한 요소는 무엇인가요?', 4, 3),
    ('PM 기술면접', '프로젝트 종료 후 회고의 중요성은 무엇인가요?', 5, 4),
    ('PM 기술면접', '지연된 프로젝트를 원활하게 진행하기 위한 전략은 무엇인가요?', 3, 5);


-- 공통 인성면접 질문 데이터
INSERT INTO question (job, question, priority, difficulty)
VALUES
    ('공통 인성면접', '자신의 강점과 약점에 대해 이야기해보세요.', 1, 2),
    ('공통 인성면접', '팀에서 갈등이 발생했을 때 어떻게 해결하셨나요?', 2, 4),
    ('공통 인성면접', '성공적이었던 프로젝트 경험을 말해보세요.', 3, 3),
    ('공통 인성면접', '어려운 문제에 직면했을 때 어떻게 해결하셨나요?', 4, 4),
    ('공통 인성면접', '팀워크에서 가장 중요한 요소는 무엇이라고 생각하나요?', 5, 5),
    ('공통 인성면접', '시간 관리를 어떻게 하시나요?', 2, 3),
    ('공통 인성면접', '실패 경험과 그로부터 배운 점을 이야기해보세요.', 3, 2),
    ('공통 인성면접', '자신의 목표는 무엇이며, 이를 달성하기 위한 계획은 무엇인가요?', 4, 3),
    ('공통 인성면접', '직장에서 가장 중요하다고 생각하는 가치는 무엇인가요?', 5, 4),
    ('공통 인성면접', '스트레스를 어떻게 관리하시나요?', 3, 3);
