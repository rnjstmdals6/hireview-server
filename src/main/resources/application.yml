spring:
  main:
    web-application-type: reactive  # WebFlux를 사용하여 리액티브한 애플리케이션으로 설정
  r2dbc:
    url: r2dbc:mariadb://0.0.0.0:3306/hireviewdb
    username: hireviewuser
    password: rnjs6078
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 54700092433-7jslsjuohgh38vs53oinpg614kic1rrv.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            scope:
              - email
              - profile
          kakao:
            client-id: b730b64ca5ff962d7ccde645597a0d2a
            client-secret: ""
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
            user-info-authentication-method: POST
  jwt:
    secret: RFV6VlY4LX5uKWZWV0gjX1A5KCZBZ2lROz9QPFdKMT87blNDWE9me0g+VT0lYjgxTU9NKGoza3hRdCZyJ29R
    expiration: 3600000
    refresh-expiration: 86400000

logging:
  level:
    org.springframework.r2dbc: DEBUG

gemini:
  api:
    key: AIzaSyDrC4U7xeBex1cf7WrnCjXcHAPhbuZpkdE
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:streamGenerateContent?alt=sse&key=

app:
  base-url: "http://localhost:8080"
  redirect-url: "http://127.0.0.1:5173"

profile:
  image:
    upload-dir: /uploads